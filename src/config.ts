import { Roll } from "./types";

export interface DiceTrayConfig {
    assetPath?: string,
    gravity?: number,
    mass?: number,
    friction?: number,
    restitution?: number,
    angularDamping?: number,
    linearDamping?: number,
    spinForce?: number,
    throwForce?: number,
    startingHeight?: number,
    settleTimeout?: number,
    offscreen?: boolean,
    delay?: number,
    lightIntensity?: number,
    enableShadows?: boolean,
    shadowTransparency?: number,
    theme?: string,
    themeColor?: string,
    scale?: number,
    suspendSimulation?: boolean,
    origin?: string,
    onReady?(rollDice?: Function): void,
    onDieComplete?(): void,
    onRollComplete?(results: Array<Roll>): void,
    onRemoveComplete?(): void,
    onThemeConfigLoaded?(): void,
    onThemeLoaded?(): void,
}

export const DEFAULT_DICETRAY_CONFIG: DiceTrayConfig = {
    assetPath: '/assets/',
    gravity: 1,
    mass: 1,
    friction: 0.8,
    restitution: 0,
    angularDamping: 0.4,
    linearDamping: 0.4,
    spinForce: 4,
    throwForce: 5,
    startingHeight: 8,
    settleTimeout: 5000,
    offscreen: true,
    delay: 10,
    lightIntensity: 1,
    enableShadows: true,
    shadowTransparency: 0.8,
    theme: 'default',
    themeColor: '#2e8555',
    scale: 6,
    suspendSimulation: false,
    origin: location.origin,
    onReady: () => {},
    onDieComplete: () => {},
    onRollComplete: () => {},
    onRemoveComplete: () => {},
    onThemeConfigLoaded: () => {},
    onThemeLoaded: () => {},
}