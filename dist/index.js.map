{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AGAA;;ACAA;;ACYO,MAAM,4CAA0C;IACnD,QAAQ;IACR,OAAO;AACX;;;;ADVA,MAAM,oCAAc,CAAC,iBAA0C,CAAC,CAAC,GAAK;IACpE,gBAAgB;IAChB,MAAM,SAAyB;QAAE,GAAG,CAAA,GAAA,yCAAsB,CAAC;QAAE,GAAG,cAAc;IAAC;IAE/E,MAAM,eAAe,CAAA,GAAA,mBAAM,AAAD;IAE1B,MAAM,yBACJ,gCAAC;QAAI,KAAK;;IAGZ,MAAM,OAAO,IAAI,CAAA,GAAA,8CAAO,AAAD,EACrB,aAAa,OAAO,EACpB;QACE,WAAW;QACX,gBAAgB;QAChB,YAAY;QACZ,WAAW;QACX,gBAAgB;IAClB;IAGF,KAAK,IAAI,GAAG,IAAI,CAAC,IAAM;QACrB,6CAA6C;QAC7C,SAAS,gBAAgB,CAAC,aAAa,IAAM;YAC3C,MAAM,gBAAgB,SAAS,cAAc,CAAC;YAC9C,IAAI,iBAAiB,OAAO,gBAAgB,CAAC,eAAe,OAAO,KAAK,QACtE,KAAK,IAAI,GAAG,KAAK;QAErB;IACF;IAGA,KAAK,cAAc,GAAG,CAAC,UAAiB;QACtC,QAAQ,GAAG,CAAC;IACd;IACF;;;;AAIA,GAEE,MAAM,WAAW,CAAA,GAAA,wBAAU,EAAE,OAAO,iBAA0C,CAAC,CAAC,GAAK;QACnF,KAAK,IAAI,GAAG,IAAI,CAAC;IACnB,GAAG;QAAC;KAAO;IAIX,OAAO;kBACL;kBACA;IACF;AACF;IAEA,2CAAe;;;ADjDf,MAAM,4CAAwC,CAAC,QAAE,KAAI,SAAE,MAAK,cAAE,WAAU,EAAE,GAAK;IAC7E,MAAM,YAAE,SAAQ,YAAE,SAAQ,EAAE,GAAG,CAAA,GAAA,wCAAU;IAEzC,QAAQ,GAAG,CAAC,UAAU;IACtB,qBACE;;0BACE,iCAAC;gBACC,OAAO;oBACL,SAAS;oBACT,UAAU;oBACV,OAAO;oBACP,YAAY;gBACd;;oBACD;oBACqB;oBAAK;;;YAE1B;;;AAGP;IAEA,2CAAe;;AD9Bf;;ADAA;;ADAA","sources":["src/index.ts","src/components/index.ts","src/components/CallSuperHeroButton/index.ts","src/components/CallSuperHeroButton/CallSuperHeroButton.tsx","src/useDiceTray.tsx","src/options.ts"],"sourcesContent":["export * from './components';","export { default as CallSuperHeroButton } from \"./CallSuperHeroButton\";\r\n","export { default } from \"./CallSuperHeroButton\";\r\n","import React from \"react\";\nimport useDiceTray from \"../../useDiceTray\";\n\ninterface IProps {\n  name: string;\n  color: string;\n  background: string;\n}\n\nconst CallSuperHeroButton: React.FC<IProps> = ({ name, color, background }) => {\n  const { diceTray, rollDice } = useDiceTray();\n\n  console.log(diceTray, rollDice)\n  return (\n    <>\n      <button\n        style={{\n          padding: \"2rem\",\n          fontSize: \"3rem\",\n          color: color,\n          background: background\n        }}\n      >\n        Click here to call {name}!!!\n      </button>\n      {diceTray}\n    </>\n  );\n}\n\nexport default CallSuperHeroButton;","import React, { useCallback, useId, useRef } from 'react';\r\nimport { DEFAULT_DICETRAY_CONFIG, DiceTrayConfig, RollDiceConfig } from './options';\r\nimport { Die } from './types';\r\nimport DiceBox from '@3d-dice/dice-box';\r\n\r\nconst useDiceTray = (diceTrayConfig: Partial<DiceTrayConfig> = {}) => {\r\n  // Merge options\r\n  const config: DiceTrayConfig = { ...DEFAULT_DICETRAY_CONFIG, ...diceTrayConfig };\r\n\r\n  const containerRef = useRef<HTMLDivElement>();\r\n\r\n  const diceTray = (\r\n    <div ref={containerRef} />\r\n  )\r\n\r\n  const Dice = new DiceBox(\r\n    containerRef.current, // target DOM element to inject the canvas for rendering\r\n    {\r\n      assetPath: \"/assets/\",\r\n      startingHeight: 8,\r\n      throwForce: 6,\r\n      spinForce: 5,\r\n      lightIntensity: 0.9\r\n    }\r\n  );\r\n\r\n  Dice.init().then(() => {\r\n    // clear dice on click anywhere on the screen\r\n    document.addEventListener(\"mousedown\", () => {\r\n      const diceBoxCanvas = document.getElementById(\"dice-canvas\");\r\n      if (diceBoxCanvas && window.getComputedStyle(diceBoxCanvas).display !== \"none\") {\r\n        Dice.hide().clear();\r\n      }\r\n    });\r\n  });\r\n\r\n\r\n  Dice.onRollComplete = (results: any) => {\r\n    console.log(results);\r\n  };\r\n/*\r\n  const dice = useRef<Die[]>([]);\r\n  const diceTrayRef = useRef<HTMLCanvasElement>();\r\n  const context = useRef<CanvasRenderingContext2D>();\r\n*/\r\n\r\n  const rollDice = useCallback(async (rollDiceConfig: Partial<RollDiceConfig> = {}) => {\r\n    Dice.show().roll(\"1d6\");\r\n  }, [config])\r\n\r\n\r\n\r\n  return {\r\n    diceTray,\r\n    rollDice,\r\n  }\r\n}\r\n\r\nexport default useDiceTray;","import type { MutableRefObject } from \"react\";\r\n\r\nexport interface DiceTrayConfig {\r\n    height: number,\r\n    width: number,\r\n}\r\n\r\nexport interface RollDiceConfig {\r\n    count: number,\r\n    theme: string,\r\n}\r\n\r\nexport const DEFAULT_DICETRAY_CONFIG: DiceTrayConfig = {\r\n    height: 500,\r\n    width: 500,\r\n}"],"names":[],"version":3,"file":"index.js.map"}